proxies:
  - {name: Astrill☢️, type: socks5, server: , port: , username: , password: ,udp:  }
  - {name: 阿里云, type: socks5, server: , port: , username: , password: ,udp:  }
  - {name: 爪云-L🇯🇵, type: hysteria2, server: , port: ,skip-cert-verify: , password: }
  - {name: 新加坡🇸🇬, type: hysteria2, server: , port: , skip-cert-verify:, password: }
  - {name: 意大利轻量🇮🇹, type: hysteria2, server: , port:, skip-cert-verify:, password: }
  - {name: 德国轻量N1🇩🇪, type: hysteria2, server: , port:, skip-cert-verify:, password: }
  - {name: 德国轻量N2🇩🇪, type: hysteria2, server: , port:, skip-cert-verify:, password: }
  - {name: 德国轻量N3🇩🇪, type: hysteria2, server: , port:, skip-cert-verify:, password: }
  - {name: 荷兰🇳🇱, type: hysteria2, server: , port: , skip-cert-verify: , password: }
  - {name: 美国R1🇺🇸, type: hysteria2, server: , port:, skip-cert-verify:, password: }
  - {name: 美国R2🇺🇸, type: hysteria2, server: , port:, skip-cert-verify:, password: }
  - {name: 直连🇨🇳, type: direct}
  - {name: 拒绝⛔️, type: reject}
# 出站策略
# 注意锚点必须放在引用的上方，可以集中把锚点全部放yaml的顶部。
proxy-groups:
  - {name: 1-国内, type: select, url: http://connect.rom.miui.com/generate_204, proxies: [直连🇨🇳,拒绝⛔️,阿里云,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: 2-自定义墙, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: 3-docker, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: 4-AI, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: 5-YouTube, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: 5-TikTok, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: 5-奈飞, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: 6-Speedtest, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: 7-Telegram, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: 8-PayPal, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: 8-数字货币, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: 9-Apple, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: 9-微软, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: 9-Google, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: 9-OneDrive, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: X-GitHub, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: XI-游戏平台, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: XII-非CNのIP, type: select, proxies: [直连🇨🇳,拒绝⛔️,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}
  - {name: GLOBAL, type: select, proxies: [直连🇨🇳,拒绝⛔️,阿里云,Astrill☢️,延迟最小,负载均衡,爪云-L🇯🇵,新加坡🇸🇬,荷兰🇳🇱,意大利轻量🇮🇹,德国轻量N1🇩🇪,德国轻量N2🇩🇪,德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]}

  - name: 负载均衡
    type: smart
    strategy: sticky-sessions
    uselightgbm: true
    include-all: false
    collectdata: false
    tolerance: 50
    interval: 180
    url: https://clients3.google.com/generate_204
    proxies: [Astrill☢️,荷兰🇳🇱, 意大利轻量🇮🇹, 德国轻量N1🇩🇪, 德国轻量N2🇩🇪, 德国轻量N3🇩🇪,美国R1🇺🇸,美国R2🇺🇸]
    policy-priority: "Astrill☢️:1.5;德国轻量N1🇩🇪:1;德国轻量N2🇩🇪:1.3;德国轻量N3🇩🇪:1.3;意大利轻量🇮🇹:1.3;荷兰🇳🇱:1.1;美国R1🇺🇸:1.4;美国R2🇺🇸:1.4;"
  - name: 延迟最小
    type: url-test
    tolerance: 50   
    interval: 180
    lazy: true
    url: https://clients3.google.com/generate_204
    proxies: [爪云-L🇯🇵, 新加坡🇸🇬, 荷兰🇳🇱, 意大利轻量🇮🇹, 德国轻量N1🇩🇪, 德国轻量N2🇩🇪, 德国轻量N3🇩🇪, 美国R1🇺🇸, 美国R2🇺🇸]
# 规则匹配
# 此规则部分没有做防泄露处理，因为弊严重大于利！
rules:
#域名规则
#专属设备IP通过特定节点，IP/32
  - SRC-IP-CIDR,192.168.3.232/32,爪云-L🇯🇵,no-resolve
  - SRC-IP-CIDR,192.168.3.233/32,新加坡🇸🇬,no-resolve
  - RULE-SET,my_class,1-国内
  - RULE-SET,private_domain,1-国内
  - RULE-SET,docker_class,3-docker
  - RULE-SET,proxylite_class,2-自定义墙
  - RULE-SET,speedtest_domain,6-Speedtest
  - RULE-SET,ai_domain,4-AI
  - RULE-SET,Crypto_class,8-数字货币
  - RULE-SET,telegram_domain,7-Telegram
  - RULE-SET,github_domain,X-GitHub
  - RULE-SET,netflix_domain,5-奈飞
  - RULE-SET,youtube_domain,5-YouTube
  - RULE-SET,tiktok_domain,5-TikTok
  - RULE-SET,google_domain,9-Google
  - RULE-SET,onedrive_domain,9-OneDrive
  - RULE-SET,paypal_domain,8-PayPal
  - RULE-SET,game1_class,XI-游戏平台
  - RULE-SET,game2_class,XI-游戏平台
  - RULE-SET,game3_class,XI-游戏平台
  - RULE-SET,game4_class,XI-游戏平台
  - RULE-SET,game5_class,XI-游戏平台
  - RULE-SET,microsoft_domain,9-微软
  - RULE-SET,apple_domain,9-Apple

#IP规则
  - RULE-SET,gfw_domain,2-自定义墙
  - RULE-SET,cn_domain,1-国内
  - RULE-SET,cn_ip,1-国内
  - RULE-SET,google_ip,9-Google,no-resolve
  - RULE-SET,netflix_ip,5-奈飞,no-resolve
  - RULE-SET,telegram_ip,7-Telegram,no-resolve
  - RULE-SET,geolocation-!cn,XII-非CNのIP,no-resolve
  - MATCH,GLOBAL

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  my_class: { <<: *class, url: "https://raw.githubusercontent.com/huangshine/Clash/refs/heads/main/rules/my.list"}
  docker_class: { <<: *class, url: "https://raw.githubusercontent.com/huangshine/Clash/refs/heads/main/rules/docker.list"}
  Crypto_class: { <<: *class, url: "https://raw.githubusercontent.com/huangshine/Clash/refs/heads/main/rules/Crypto.list"}
  proxylite_class: { <<: *class, url: "https://raw.githubusercontent.com/LoveTINTIN/ClashRules/refs/heads/main/ProxyLite.list"}
  game1_class: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Epic.list"}
  game2_class: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Origin.list"}
  game3_class: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Sony.list"}
  game4_class: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Steam.list"}
  game5_class: { <<: *class, url: "https://raw.githubusercontent.com/ACL4SSR/ACL4SSR/master/Clash/Ruleset/Nintendo.list"}
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  ai_domain: {  <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/refs/heads/meta/geo/geosite/category-ai-!cn.mrs"}
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  github_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  onedrive_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  speedtest_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  tiktok_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  gfw_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
