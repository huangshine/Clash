proxies:
  - {name: 代理♻️, type: socks5, server: , port: , username: , password: }
  - {name: 直连🇨🇳, type: direct}
  - {name: 拒绝⛔️, type: reject}
# 注意锚点必须放在引用的上方，可以集中把锚点全部放yaml的顶部。
proxy-groups:
  - {name: 直连🇨🇳🇨🇳, type: select, proxies: [代理♻️, 直连🇨🇳, 拒绝⛔️]}
  - {name: 测速-Speedtest✈️, type: select, proxies: [代理♻️, 直连🇨🇳, 拒绝⛔️]}

  - {name: 影音-YouTube🎬, type: select, proxies: [代理♻️, 直连🇨🇳, 拒绝⛔️]}
  - {name: 影音-TikTok🎵, type: select, proxies: [代理♻️, 直连🇨🇳, 拒绝⛔️]}
  - {name: 影音-奈飞🎥, type: select, proxies: [代理♻️, 直连🇨🇳, 拒绝⛔️]}
  - {name: AI-ChatGPT💡, type: select, proxies: [代理♻️, 直连🇨🇳, 拒绝⛔️]}
  - {name: 通信-Telegram📲, type: select, proxies: [代理♻️, 直连🇨🇳, 拒绝⛔️]}
  - {name: 金融-加密货币🏦, type: select, proxies: [代理♻️, 直连🇨🇳, 拒绝⛔️]}
  - {name: 大厂-Apple🍎, type: select, proxies: [代理♻️, 直连🇨🇳, 拒绝⛔️]}
  - {name: 大厂-微软🪟, type: select, proxies: [代理♻️, 直连🇨🇳, 拒绝⛔️]}
  - {name: 大厂-Google🍀, type: select, proxies: [代理♻️, 直连🇨🇳, 拒绝⛔️]}
  - {name: 大厂-OneDrive🐬, type: select, proxies: [代理♻️, 直连🇨🇳, 拒绝⛔️]}
  - {name: 代码-GitHub👨🏿‍💻, type: select, proxies: [代理♻️, 直连🇨🇳, 拒绝⛔️]}
  - {name: GLOBAL, type: select, proxies: [代理♻️, 直连🇨🇳, 拒绝⛔️]}

# 规则匹配
# 此规则部分没有做防泄露处理，因为弊严重大于利！
rules:
  - DOMAIN-SUFFIX,qichiyu.com,代理♻️
  - RULE-SET,private_domain,直连🇨🇳
  - RULE-SET,apple_domain,大厂-Apple🍎
  - RULE-SET,proxylite,代理♻️
  - RULE-SET,ai,AI-ChatGPT💡
  - RULE-SET,github_domain,代码-GitHub👨🏿‍💻
  - RULE-SET,youtube_domain,影音-YouTube🎬
  - RULE-SET,google_domain,大厂-Google🍀
  - RULE-SET,onedrive_domain,大厂-OneDrive🐬
  - RULE-SET,microsoft_domain,大厂-微软🪟
  - RULE-SET,tiktok_domain,影音-TikTok🎵
  - RULE-SET,speedtest_domain,测速-Speedtest✈️
  - RULE-SET,telegram_domain,通信-Telegram📲
  - RULE-SET,netflix_domain,影音-奈飞🎥
  - RULE-SET,paypal_domain,金融-加密货币🏦
  - RULE-SET,gfw_domain,代理♻️
  - RULE-SET,geolocation-!cn,代理♻️
  - RULE-SET,cn_domain,直连🇨🇳
  - RULE-SET,google_ip,大厂-Google🍀,no-resolve
  - RULE-SET,netflix_ip,影音-奈飞🎥,no-resolve
  - RULE-SET,telegram_ip,通信-Telegram📲,no-resolve
  - RULE-SET,cn_ip,直连🇨🇳
  - MATCH, GLOBAL

# 规则集
rule-anchor:
  ip: &ip {type: http, interval: 86400, behavior: ipcidr, format: mrs}
  domain: &domain {type: http, interval: 86400, behavior: domain, format: mrs}
  class: &class {type: http, interval: 86400, behavior: classical, format: text}
rule-providers: 
  private_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/private.mrs"}
  proxylite: { <<: *class, url: "https://raw.githubusercontent.com/LoveTINTIN/ClashRules/refs/heads/main/ProxyLite.list"}
  ai: {  <<: *domain, url: "https://github.com/MetaCubeX/meta-rules-dat/raw/refs/heads/meta/geo/geosite/category-ai-!cn.mrs" }
  youtube_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/youtube.mrs"}
  google_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/google.mrs"}
  github_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/github.mrs"}
  telegram_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/telegram.mrs"}
  netflix_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/netflix.mrs"}
  paypal_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/paypal.mrs"}
  onedrive_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/onedrive.mrs"}
  microsoft_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/microsoft.mrs"}
  apple_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/apple-cn.mrs"}
  speedtest_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/ookla-speedtest.mrs"}
  tiktok_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/tiktok.mrs"}
  gfw_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/gfw.mrs"}
  geolocation-!cn: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/geolocation-!cn.mrs"}
  cn_domain: { <<: *domain, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geosite/cn.mrs"}
  cn_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/cn.mrs"}
  google_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/google.mrs"}
  telegram_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/telegram.mrs"}
  netflix_ip: { <<: *ip, url: "https://raw.githubusercontent.com/MetaCubeX/meta-rules-dat/meta/geo/geoip/netflix.mrs"}
